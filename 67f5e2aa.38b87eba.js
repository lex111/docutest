/*! For license information please see 67f5e2aa.38b87eba.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{167:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return p}));var a=t(1),o=t(6),i=(t(0),t(239)),r=t(242),s=t(243),l={id:"migrating-from-v1-to-v2",title:"Migrating from v1 to v2"},c={id:"version-2.0.0-alpha.39/migrating-from-v1-to-v2",title:"Migrating from v1 to v2",description:"This doc guides you through migrating an existing Docusaurus 1 site to Docusaurus 2.",source:"@site/versioned_docs/version-2.0.0-alpha.39/migrating-from-v1-to-v2.md",permalink:"/docs/2.0.0-alpha.39/migrating-from-v1-to-v2",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/versioned_docs/version-2.0.0-alpha.39/migrating-from-v1-to-v2.md",version:"2.0.0-alpha.39",lastUpdatedBy:"Wei Gao",lastUpdatedAt:1580560026,sidebar:"version-2.0.0-alpha.39/docs",previous:{title:"Deployment",permalink:"/docs/2.0.0-alpha.39/deployment"},next:{title:"Plugins",permalink:"/docs/2.0.0-alpha.39/using-plugins"}},b=[{value:"Project setup",id:"project-setup",children:[{value:"<code>package.json</code>",id:"packagejson",children:[]},{value:"Update references to the <code>build</code> directory",id:"update-references-to-the-build-directory",children:[]},{value:"<code>.gitignore</code>",id:"gitignore",children:[]}]},{value:"Site configurations",id:"site-configurations",children:[{value:"<code>docusaurus.config.js</code>",id:"docusaurusconfigjs",children:[]},{value:"Updated fields",id:"updated-fields",children:[]},{value:"Removed fields",id:"removed-fields",children:[]}]},{value:"Components",id:"components",children:[{value:"Sidebar",id:"sidebar",children:[]},{value:"Footer",id:"footer",children:[]},{value:"Pages",id:"pages",children:[]}]},{value:"Content",id:"content",children:[{value:"Remove AUTOGENERATED_TABLE_OF_CONTENTS",id:"remove-autogenerated_table_of_contents",children:[]},{value:"Update Markdown syntax to be MDX-compatible",id:"update-markdown-syntax-to-be-mdx-compatible",children:[]},{value:"Language-specific Code Tabs",id:"language-specific-code-tabs",children:[]},{value:"Frontmatter",id:"frontmatter",children:[]}]},{value:"Test your site",id:"test-your-site",children:[]},{value:"Example migration PRs",id:"example-migration-prs",children:[]},{value:"Support",id:"support",children:[]},{value:"Versioned Site",id:"versioned-site",children:[]},{value:"Changes from v1",id:"changes-from-v1",children:[{value:"Migrate your versioned_docs frontmatter",id:"migrate-your-versioned_docs-frontmatter",children:[]},{value:"Migrate your versioned_sidebars",id:"migrate-your-versioned_sidebars",children:[]},{value:"Populate your versioned_sidebars &amp; versioned_docs",id:"populate-your-versioned_sidebars--versioned_docs",children:[]},{value:"Convert style attributes to style objects in MDX",id:"convert-style-attributes-to-style-objects-in-mdx",children:[]}]}],d={rightToc:b},u="wrapper";function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)(u,Object(a.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This doc guides you through migrating an existing Docusaurus 1 site to Docusaurus 2."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note: This migration guide is targeted at Docusaurus users without translation and/or versioning features and assumes the following structure:")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"\u251c\u2500\u2500 docs\n\u2514\u2500\u2500 website\n    \u251c\u2500\u2500 blog\n    \u251c\u2500\u2500 core\n    \u2502   \u2514\u2500\u2500 Footer.js\n    \u251c\u2500\u2500 package.json\n    \u251c\u2500\u2500 pages\n    \u251c\u2500\u2500 sidebars.json\n    \u251c\u2500\u2500 siteConfig.js\n    \u2514\u2500\u2500 static\n")),Object(i.b)("h2",{id:"project-setup"},"Project setup"),Object(i.b)("h3",{id:"packagejson"},Object(i.b)("inlineCode",{parentName:"h3"},"package.json")),Object(i.b)("h4",{id:"scoped-package-names"},"Scoped package names"),Object(i.b)("p",null,"In Docusaurus 2, we use scoped package names:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"docusaurus")," -> ",Object(i.b)("inlineCode",{parentName:"li"},"@docusaurus/core"))),Object(i.b)("p",null,"This provides a clear distinction between Docusaurus' official packages and community maintained packages. In another words, all Docusaurus' official packages are namespaced under ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/"),"."),Object(i.b)("p",null,"Meanwhile, the default doc site functionalities provided by Docusaurus 1 are now provided by ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic"),". Therefore, we need to add this dependency as well:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'// package.json\n{\n  dependencies: {\n-    "docusaurus": "^1.x.x",\n+    "@docusaurus/core": "^2.0.0-alpha.39",\n+    "@docusaurus/preset-classic": "^2.0.0-alpha.39",\n  }\n}\n')),Object(i.b)("h4",{id:"cli-commands"},"CLI commands"),Object(i.b)("p",null,"Meanwhile, CLI commands are renamed to ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus <command>")," (instead of ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus-command"),")."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},'"scripts"')," section of your ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," should be updated as follows:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:"{3-6}","{3-6}":!0}),'{\n  "scripts": {\n    "start": "docusaurus start",\n    "build": "docusaurus build",\n    "swizzle": "docusaurus swizzle",\n    "deploy": "docusaurus deploy"\n    ...\n  }\n}\n')),Object(i.b)("p",null,"A typical Docusaurus 2 ",Object(i.b)("inlineCode",{parentName:"p"},"package.json")," may look like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "scripts": {\n    "start": "docusaurus start",\n    "build": "docusaurus build",\n    "swizzle": "docusaurus swizzle",\n    "deploy": "docusaurus deploy"\n  },\n  "dependencies": {\n    "@docusaurus/core": "^2.0.0-alpha.39",\n    "@docusaurus/preset-classic": "^2.0.0-alpha.39",\n    "classnames": "^2.2.6",\n    "react": "^16.10.2",\n    "react-dom": "^16.10.2"\n  },\n  "browserslist": {\n    "production": [">0.2%", "not dead", "not op_mini all"],\n    "development": [\n      "last 1 chrome version",\n      "last 1 firefox version",\n      "last 1 safari version"\n    ]\n  }\n}\n')),Object(i.b)("h3",{id:"update-references-to-the-build-directory"},"Update references to the ",Object(i.b)("inlineCode",{parentName:"h3"},"build")," directory"),Object(i.b)("p",null,"In Docusaurus 1, all the build artifacts are located within ",Object(i.b)("inlineCode",{parentName:"p"},"website/build/<PROJECT_NAME>"),". However, in Docusaurus 2, it is now moved to just ",Object(i.b)("inlineCode",{parentName:"p"},"website/build"),". Make sure that you update your deployment configuration to read the generated files from the correct ",Object(i.b)("inlineCode",{parentName:"p"},"build")," directory."),Object(i.b)("p",null,"If you are deploying to GitHub pages, make sure to run ",Object(i.b)("inlineCode",{parentName:"p"},"yarn deploy")," instead of ",Object(i.b)("inlineCode",{parentName:"p"},"yarn publish-gh-pages")," script."),Object(i.b)("h3",{id:"gitignore"},Object(i.b)("inlineCode",{parentName:"h3"},".gitignore")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},".gitignore")," in your ",Object(i.b)("inlineCode",{parentName:"p"},"website")," should contain:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"# dependencies\n/node_modules\n\n# production\n/build\n\n# generated files\n.docusaurus\n.cache-loader\n\n# misc\n.DS_Store\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n")),Object(i.b)("h2",{id:"site-configurations"},"Site configurations"),Object(i.b)("h3",{id:"docusaurusconfigjs"},Object(i.b)("inlineCode",{parentName:"h3"},"docusaurus.config.js")),Object(i.b)("p",null,"Rename ",Object(i.b)("inlineCode",{parentName:"p"},"siteConfig.js")," to ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),". In Docusaurus 2, we split each functionality (blog, docs, pages) into plugins for modularity. Presets are bundles of plugins and for backward compatibility we built a ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic")," preset which bundles most of the essential plugins present in Docusaurus 1."),Object(i.b)("p",null,"Add the following preset configuration to your ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          // docs folder path relative to website dir.\n          path: '../docs',\n          // sidebars file relative to website dir.\n          sidebarPath: require.resolve('./sidebars.json'),\n        },\n        ...\n      },\n    ],\n  ],\n};\n")),Object(i.b)("p",null,"Refer to migration guide below for each field in ",Object(i.b)("inlineCode",{parentName:"p"},"siteConfig.js"),"."),Object(i.b)("h3",{id:"updated-fields"},"Updated fields"),Object(i.b)("h4",{id:"baseurl-tagline-title-url-favicon-organizationname-projectname-githubhost-scripts-stylesheets"},Object(i.b)("inlineCode",{parentName:"h4"},"baseUrl"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"tagline"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"title"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"url"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"favicon"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"organizationName"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"projectName"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"githubHost"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"scripts"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"stylesheets")),Object(i.b)("p",null,"No actions needed."),Object(i.b)("h4",{id:"colors"},Object(i.b)("inlineCode",{parentName:"h4"},"colors")),Object(i.b)("p",null,"Deprecated. We wrote a custom CSS framework for Docusaurus 2 called Infima which uses CSS variables for theming. The docs are not quite ready yet and we will update here when it is. To overwrite Infima' CSS variables, create your own CSS file (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"./src/css/custom.css"),") and import it globally by passing it as an option to ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"{8-10}","{8-10}":!0}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        theme: {\n          customCss: require.resolve('./src/css/custom.css'),\n        },\n      },\n    ],\n  ],\n};\n")),Object(i.b)("p",null,"Infima uses 7 shades of each color. We recommend using ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.colorbox.io/"}),"ColorBox")," to find the different shades of colors for your chosen primary color."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/**\n * /src/css/custom.css\n * You can override the default Infima variables here.\n * Note: this is not a complete list of --ifm- variables.\n */\n:root {\n  --ifm-color-primary: #25c2a0;\n  --ifm-color-primary-dark: rgb(33, 175, 144);\n  --ifm-color-primary-darker: rgb(31, 165, 136);\n  --ifm-color-primary-darkest: rgb(26, 136, 112);\n  --ifm-color-primary-light: rgb(70, 203, 174);\n  --ifm-color-primary-lighter: rgb(102, 212, 189);\n  --ifm-color-primary-lightest: rgb(146, 224, 208);\n}\n")),Object(i.b)("h4",{id:"footericon-copyright-ogimage-twitterimage-docssidenavcollapsible"},Object(i.b)("inlineCode",{parentName:"h4"},"footerIcon"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"copyright"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"ogImage"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"twitterImage"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"docsSideNavCollapsible")),Object(i.b)("p",null,"Site meta info such as assets, SEO, copyright info are now handled by themes. To customize them, use the ",Object(i.b)("inlineCode",{parentName:"p"},"themeConfig")," field in your ",Object(i.b)("inlineCode",{parentName:"p"},"docusaurus.config.js"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  themeConfig: {\n    footer: {\n      logo: {\n        alt: 'Facebook Open Source Logo',\n        src: 'https://docusaurus.io/img/oss_logo.png',\n        href: 'https://opensource.facebook.com/',\n      },\n      copyright: `Copyright \xa9 ${new Date().getFullYear()} Facebook, Inc.`,\n    },\n    image: 'img/docusaurus.png',\n    // Equivalent to `docsSideNavCollapsible`\n    sidebarCollapsible: false,\n    // ...\n  },\n};\n")),Object(i.b)("h4",{id:"headericon-headerlinks"},Object(i.b)("inlineCode",{parentName:"h4"},"headerIcon"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"headerLinks")),Object(i.b)("p",null,"In Docusaurus 1, header icon and header links were root fields in ",Object(i.b)("inlineCode",{parentName:"p"},"siteConfig"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'headerIcon: \'img/docusaurus.svg\',\nheaderLinks: [\n  { doc: "doc1", label: "Getting Started" },\n  { page: "help", label: "Help" },\n  { href: "https://github.com/", label: "GitHub" },\n  { blog: true, label: "Blog" },\n],\n')),Object(i.b)("p",null,"Now, these two fields are both handled by the theme:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"{7-20}","{7-20}":!0}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  themeConfig: {\n    navbar: {\n      title: 'Docusaurus',\n      logo: {\n        alt: 'Docusaurus Logo',\n        src: 'img/docusaurus.svg',\n      },\n      links: [\n        {to: 'docs/doc1', label: 'Getting Started', position: 'left'},\n        {to: 'help', label: 'Help', position: 'left'},\n        {\n          href: 'https://github.com/',\n          label: 'GitHub',\n          position: 'right',\n        },\n        {to: 'blog', label: 'Blog', position: 'left'},\n      ],\n    },\n    // ...\n  },\n};\n")),Object(i.b)("h4",{id:"algolia"},Object(i.b)("inlineCode",{parentName:"h4"},"algolia")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"{5-9}","{5-9}":!0}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  themeConfig: {\n    algolia: {\n      apiKey: '47ecd3b21be71c5822571b9f59e52544',\n      indexName: 'docusaurus-2',\n      algoliaOptions: { ... },\n    },\n    // ...\n  },\n};\n")),Object(i.b)("h4",{id:"blogsidebarcount"},Object(i.b)("inlineCode",{parentName:"h4"},"blogSidebarCount")),Object(i.b)("p",null,"Deprecated. Pass it as a blog option to ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic")," instead:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"{9}","{9}":!0}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        blog: {\n          postsPerPage: 10,\n        },\n        // ...\n      },\n    ],\n  ],\n};\n")),Object(i.b)("h4",{id:"cname"},Object(i.b)("inlineCode",{parentName:"h4"},"cname")),Object(i.b)("p",null,"Deprecated. Create a ",Object(i.b)("inlineCode",{parentName:"p"},"CNAME")," file in your ",Object(i.b)("inlineCode",{parentName:"p"},"static")," folder instead with your custom domain. Files in the ",Object(i.b)("inlineCode",{parentName:"p"},"static")," folder will be copied into the root of the ",Object(i.b)("inlineCode",{parentName:"p"},"build")," folder during execution of the build command."),Object(i.b)("h4",{id:"customdocspath-docsurl-editurl-enableupdateby-enableupdatetime"},Object(i.b)("inlineCode",{parentName:"h4"},"customDocsPath"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"docsUrl"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"editUrl"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"enableUpdateBy"),", ",Object(i.b)("inlineCode",{parentName:"h4"},"enableUpdateTime")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"BREAKING"),": ",Object(i.b)("inlineCode",{parentName:"p"},"editUrl")," should point to (website) docusaurus project instead of ",Object(i.b)("inlineCode",{parentName:"p"},"docs")," directory."),Object(i.b)("p",null,"Deprecated. Pass it as an option to ",Object(i.b)("inlineCode",{parentName:"p"},"@docusaurus/preset-classic")," docs instead:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"{9-22}","{9-22}":!0}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  presets: [\n    [\n      '@docusaurus/preset-classic',\n      {\n        docs: {\n          // Equivalent to `customDocsPath`.\n          path: 'docs',\n          // Equivalent to `editUrl` but should point to `website` dir instead of `website/docs`\n          editUrl: 'https://github.com/facebook/docusaurus/edit/master/website',\n          // Equivalent to `docsUrl`.\n          routeBasePath: 'docs',\n          // Remark and Rehype plugins passed to MDX. Replaces `markdownOptions` and `markdownPlugins`.\n          remarkPlugins: [],\n          rehypePlugins: [],\n          // Equivalent to `enableUpdateBy`.\n          showLastUpdateAuthor: true,\n          // Equivalent to `enableUpdateTime`.\n          showLastUpdateTime: true,\n        },\n        // ...\n      },\n    ],\n  ],\n};\n")),Object(i.b)("h4",{id:"gatrackingid"},Object(i.b)("inlineCode",{parentName:"h4"},"gaTrackingId")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"{6}","{6}":!0}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  themeConfig: {\n    googleAnalytics: {\n      trackingID: 'UA-141789564-1',\n    },\n    // ...\n  },\n};\n")),Object(i.b)("h4",{id:"gagtag"},Object(i.b)("inlineCode",{parentName:"h4"},"gaGtag")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"{6}","{6}":!0}),"// docusaurus.config.js\nmodule.exports = {\n  // ...\n  themeConfig: {\n    gtag: {\n      trackingID: 'UA-141789564-1',\n    },\n    // ...\n  },\n};\n")),Object(i.b)("h3",{id:"removed-fields"},"Removed fields"),Object(i.b)("p",null,"The following fields are all deprecated, you may remove from your configuration file."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"blogSidebarTitle")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"cleanUrl")," - Clean URL is used by default now."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"defaultVersionShown")," - Versioning is not ported yet. You'd be unable to migration to Docusaurus 2 if you are using versioning. Stay tuned."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"disableHeaderTitle")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"disableTitleTagline")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"docsSideNavCollapsible")," is available at ",Object(i.b)("inlineCode",{parentName:"li"},"themeConfig.sidebarCollapsible"),", and this is turned on by default now."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"facebookAppId")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"facebookComments")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"facebookPixelId")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"fonts")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"highlight")," - We now use ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://prismjs.com/"}),"Prism")," instead of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://highlightjs.org/"}),"highlight.js"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"markdownOptions")," - We use MDX in v2 instead of Remarkable. Your markdown options have to be converted to Remark/Rehype plugins."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"markdownPlugins")," - We use MDX in v2 instead of Remarkable. Your markdown plugins have to be converted to Remark/Rehype plugins."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"manifest")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"noIndex")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"onPageNav")," - This is turned on by default now."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"separateCss")," - It can imported in the same manner as ",Object(i.b)("inlineCode",{parentName:"li"},"custom.css")," mentioned above."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"scrollToTop")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"scrollToTopOptions")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"translationRecruitingLink")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"twitter")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"twitterUsername")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"useEnglishUrl")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"users")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"usePrism")," - We now use ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://prismjs.com/"}),"Prism")," instead of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://highlightjs.org/"}),"highlight.js")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"wrapPagesHTML"))),Object(i.b)("p",null,"We intend to implement many of the deprecated config fields as plugins in future. Help will be appreciated!"),Object(i.b)("h2",{id:"components"},"Components"),Object(i.b)("h3",{id:"sidebar"},"Sidebar"),Object(i.b)("p",null,"In previous version, nested sidebar category is not allowed and sidebar category can only contain doc id. However, v2 allows infinite nested sidebar and we have many types of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/2.0.0-alpha.39/sidebar#sidebar-item"}),"Sidebar Item")," other than document."),Object(i.b)("p",null,"You'll have to migrate your sidebar if it contains category type. Rename ",Object(i.b)("inlineCode",{parentName:"p"},"subcategory")," to ",Object(i.b)("inlineCode",{parentName:"p"},"category")," and ",Object(i.b)("inlineCode",{parentName:"p"},"ids")," to ",Object(i.b)("inlineCode",{parentName:"p"},"items"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"{\n- type: 'subcategory',\n+ type: 'category',\n  label: 'My Example Subcategory',\n+ items: ['doc1'],\n- ids: ['doc1']\n},\n")),Object(i.b)("h3",{id:"footer"},"Footer"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"website/core/Footer.js")," is no longer needed. If you want to modify the default footer provided by docusaurus, ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/2.0.0-alpha.39/using-themes#swizzling-theme-components"}),"swizzle")," it:"),Object(i.b)(r.a,{defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},Object(i.b)(s.a,{value:"npm",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run swizzle @docusaurus/theme-classic Footer\n"))),Object(i.b)(s.a,{value:"yarn",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"yarn run swizzle @docusaurus/theme-classic Footer\n")))),Object(i.b)("p",null,"This will copy the current ",Object(i.b)("inlineCode",{parentName:"p"},"<Footer />")," component used by the theme to a ",Object(i.b)("inlineCode",{parentName:"p"},"src/theme/Footer")," directory under the root of your site, you may then edit this component for customization."),Object(i.b)("h3",{id:"pages"},"Pages"),Object(i.b)("p",null,"Please refer to ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/2.0.0-alpha.39/creating-pages"}),"creating pages")," to learn how Docusaurus 2 pages work. After reading that, notice that you have to move ",Object(i.b)("inlineCode",{parentName:"p"},"pages/en")," files in v1 to ",Object(i.b)("inlineCode",{parentName:"p"},"src/pages")," instead."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"CompLibrary")," is deprecated in v2, so you have to write your own React component or use Infima styles (Docs will be available soon, sorry about that! In the meanwhile, inspect the V2 website or view ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://facebookincubator.github.io/infima/"}),"https://facebookincubator.github.io/infima/")," to see what styles are available)."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The following code could be helpful for migration of various pages",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Index page - ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/facebook/flux/blob/master/website/src/pages/index.js"}),"Flux")," (recommended), ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/facebook/docusaurus/blob/master/website/src/pages/index.js"}),"Docusaurus 2"),", ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/facebook/hermes/blob/master/website/src/pages/index.js"}),"Hermes"),","),Object(i.b)("li",{parentName:"ul"},"Help/Support page - ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/facebook/docusaurus/blob/master/website/src/pages/help.js"}),"Docusaurus 2"),", ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://facebook.github.io/flux/support"}),"Flux"))))),Object(i.b)("h2",{id:"content"},"Content"),Object(i.b)("h3",{id:"remove-autogenerated_table_of_contents"},"Remove AUTOGENERATED_TABLE_OF_CONTENTS"),Object(i.b)("p",null,"This feature is deprecated. You may read more about it in ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/facebook/docusaurus/issues/1549"}),"this issue"),". If you need the feature, use ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/remarkjs/remark-toc"}),"remark-toc")," instead and pass it to docs plugin's ",Object(i.b)("inlineCode",{parentName:"p"},"remarkPlugins")," option."),Object(i.b)("h3",{id:"update-markdown-syntax-to-be-mdx-compatible"},"Update Markdown syntax to be MDX-compatible"),Object(i.b)("p",null,"In Docusaurus 2, the markdown syntax has been changed to ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://mdxjs.com/"}),"MDX"),". Hence there might be some broken syntax in the existing docs which you would have to update. A common example is self-closing tags like ",Object(i.b)("inlineCode",{parentName:"p"},"<img>")," and ",Object(i.b)("inlineCode",{parentName:"p"},"<br>")," which are valid in HTML would have to be explicitly closed now ( ",Object(i.b)("inlineCode",{parentName:"p"},"<img/>")," and ",Object(i.b)("inlineCode",{parentName:"p"},"<br/>"),"). All tags in MDX documents have to be valid JSX."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Tips"),": You might want to use some online tools like ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://transform.tools/html-to-jsx"}),"HTML to JSX")," to make the migration easier."),Object(i.b)("h3",{id:"language-specific-code-tabs"},"Language-specific Code Tabs"),Object(i.b)("p",null,"Refer to the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/2.0.0-alpha.39/markdown-features#multi-language-support-code-blocks"}),"multi-language support code blocks")," section."),Object(i.b)("h3",{id:"frontmatter"},"Frontmatter"),Object(i.b)("p",null,"The Docusaurus frontmatter fields for the blog have been changed from camelCase to snake_case to be consistent with the docs."),Object(i.b)("p",null,"The fields ",Object(i.b)("inlineCode",{parentName:"p"},"authorFBID")," and ",Object(i.b)("inlineCode",{parentName:"p"},"authorTwitter")," have been deprecated. They are only used for generating the profile image of the author which can be done via the ",Object(i.b)("inlineCode",{parentName:"p"},"author_image_url")," field."),Object(i.b)("h2",{id:"test-your-site"},"Test your site"),Object(i.b)("p",null,"After migration, your folder structure should look like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"my-project\n\u251c\u2500\u2500 docs\n\u2514\u2500\u2500 website\n    \u251c\u2500\u2500 blog\n    \u251c\u2500\u2500 src\n    \u2502   \u251c\u2500\u2500 css\n    \u2502   \u2502   \u2514\u2500\u2500 custom.css\n    \u2502   \u2514\u2500\u2500 pages\n    \u2502       \u2514\u2500\u2500 index.js\n    \u251c\u2500\u2500 package.json\n    \u251c\u2500\u2500 sidebars.json\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 docusaurus.config.js\n    \u2514\u2500\u2500 static\n")),Object(i.b)("p",null,"Start the development server and fix any errors"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cd website\nyarn start\n")),Object(i.b)("h2",{id:"example-migration-prs"},"Example migration PRs"),Object(i.b)("p",null,"You might want to refer to our migration PRs for ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/facebook/create-react-app/pull/7785"}),"Create React App")," and ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/facebook/flux/pull/471"}),"Flux")," as examples of how a migration for a basic Docusaurus v1 site can be done."),Object(i.b)("h2",{id:"support"},"Support"),Object(i.b)("p",null,"For any questions, you can ask in the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://discordapp.com/invite/kYaNd6V"}),Object(i.b)("inlineCode",{parentName:"a"},"#docusaurus-1-to-2-migration")," Discord channel"),". Feel free to tag ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/yangshun"}),"@yangshun")," in any migration PRs if you would like us to have a look."),Object(i.b)("h2",{id:"versioned-site"},"Versioned Site"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f ",Object(i.b)("em",{parentName:"p"},"This section is a work in progress."))),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f Although we've implemented docs versioning since 2.0.0-alpha.37, we'd like to test it out for v2 users first before we recommend v1 users to migrate to v2. There are some changes in how v2 versioning works compared to v1. In the future, we might create a script to migrate your versioned docs easier. However, if you are adventurous enough to manually migrate, feel free to do so. Be warned though, the manual migration requires lot of work.")),Object(i.b)("h2",{id:"changes-from-v1"},"Changes from v1"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Read up ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://v2.docusaurus.io/blog/2018/09/11/Towards-Docusaurus-2#versioning"}),"https://v2.docusaurus.io/blog/2018/09/11/Towards-Docusaurus-2#versioning")," first for reasoning on v1's problem")),Object(i.b)("h3",{id:"migrate-your-versioned_docs-frontmatter"},"Migrate your versioned_docs frontmatter"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Unlike v1, The markdown header for each versioned doc is no longer altered by using ",Object(i.b)("inlineCode",{parentName:"li"},"version-${version}-${original_id}")," as the value for the actual id field. See scenario below for better explanation.")),Object(i.b)("p",null,"Example, you have a ",Object(i.b)("inlineCode",{parentName:"p"},"docs/hello.md"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-md"}),"---\nid: hello\ntitle: Hello, World !\n---\n\nHi, Endilie here :)\n")),Object(i.b)("p",null,"When you cut a new version 1.0.0"),Object(i.b)("p",null,"In Docusaurus v1, ",Object(i.b)("inlineCode",{parentName:"p"},"website/versioned_docs/version-1.0.0/hello.md")," looks like this"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-md"}),"---\nid: version-1.0.0-hello\ntitle: Hello, World !\noriginal_id: hello\n---\n\nHi, Endilie here :)\n")),Object(i.b)("p",null,"In comparison, Docusaurus 2 ",Object(i.b)("inlineCode",{parentName:"p"},"website/versioned_docs/version-1.0.0/hello.md")," looks like this (exactly same as original)"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-md"}),"---\nid: hello\ntitle: Hello, World !\n---\n\nHi, Endilie here :)\n")),Object(i.b)("p",null,"Since we're going for snapshot and allow people to move (and edit) docs easily inside version. The ",Object(i.b)("inlineCode",{parentName:"p"},"id")," frontmatter is no longer altered and will remain the same. Internally, it is set as ",Object(i.b)("inlineCode",{parentName:"p"},"version-${version}/${id}"),"."),Object(i.b)("p",null,"Essentially, here are the necessary changes in each versioned_docs file:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml",metastring:"{2-3,5}","{2-3,5}":!0}),"---\n- id: version-1.0.0-hello\n+ id: hello\ntitle: Hello, World !\n- original_id: hello\n---\nHi, Endilie here :)\n")),Object(i.b)("h3",{id:"migrate-your-versioned_sidebars"},"Migrate your versioned_sidebars"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Refer to versioned_docs id as ",Object(i.b)("inlineCode",{parentName:"li"},"version-${version}/${id}")," (v2) instead of ",Object(i.b)("inlineCode",{parentName:"li"},"version-${version}-${original_id}")," (v1).")),Object(i.b)("p",null,"Because in v1 there is a good chance someone created a new file with front matter id ",Object(i.b)("inlineCode",{parentName:"p"},'"version-${version}-${id}"')," that can conflict with versioned_docs id."),Object(i.b)("p",null,"Example, Docusaurus 1 can't differentiate ",Object(i.b)("inlineCode",{parentName:"p"},"docs/xxx.md")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-md"}),"---\nid: version-1.0.0-hello\n---\n\nAnother content\n")),Object(i.b)("p",null,"and ",Object(i.b)("inlineCode",{parentName:"p"},"website/versioned_docs/version-1.0.0/hello.md")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-md"}),"---\nid: version-1.0.0-hello\ntitle: Hello, World !\noriginal_id: hello\n---\n\nHi, Endilie here :)\n")),Object(i.b)("p",null,"Since we don't allow ",Object(i.b)("inlineCode",{parentName:"p"},"/")," in v1 & v2 for frontmatter, conflicts are less likely to occur."),Object(i.b)("p",null,"So v1 users need to migrate their versioned_sidebars file"),Object(i.b)("p",null,"Example ",Object(i.b)("inlineCode",{parentName:"p"},"versioned_sidebars/version-1.0.0-sidebars.json"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:"{2-3,5-6,9-10}","{2-3,5-6,9-10}":!0}),'{\n+ "version-1.0.0/docs": {\n- "version-1.0.0-docs": {\n    "Test": [\n+    "version-1.0.0/foo/bar",\n-    "version-1.0.0-foo/bar",\n    ],\n    "Guides": [\n+    "version-1.0.0/hello",\n-    "version-1.0.0-hello"\n    ]\n  }\n}\n')),Object(i.b)("h3",{id:"populate-your-versioned_sidebars--versioned_docs"},"Populate your versioned_sidebars & versioned_docs"),Object(i.b)("p",null,"In v2, we use snapshot approach on documentation versioning. ",Object(i.b)("strong",{parentName:"p"},"Every versioned docs does not depends on other version"),". It is possible to have ",Object(i.b)("inlineCode",{parentName:"p"},"foo.md")," in ",Object(i.b)("inlineCode",{parentName:"p"},"version-1.0.0")," but it doesn't exist in ",Object(i.b)("inlineCode",{parentName:"p"},"version-1.2.0"),". This is not possible in previous version due to Docusaurus v1 fallback functionality (",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docusaurus.io/docs/en/versioning#fallback-functionality"}),"https://docusaurus.io/docs/en/versioning#fallback-functionality"),")."),Object(i.b)("p",null,"For example, if your ",Object(i.b)("inlineCode",{parentName:"p"},"versions.json")," looks like this in v1"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'// versions.json\n["1.1.0", "1.0.0"]\n')),Object(i.b)("p",null,"Docusaurus v1 creates versioned docs ",Object(i.b)("strong",{parentName:"p"},"if and only if the doc content is different"),". Your docs structure might look like this if the only doc changed from v1.0.0 to v1.1.0 is ",Object(i.b)("inlineCode",{parentName:"p"},"hello.md"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"website\n\u251c\u2500\u2500 versioned_docs\n\u2502   \u251c\u2500\u2500 version-1.1.0\n\u2502   \u2502   \u2514\u2500\u2500 hello.md\n\u2502   \u2514\u2500\u2500 version-1.0.0\n\u2502       \u251c\u2500\u2500 foo\n\u2502       \u2502   \u2514\u2500\u2500 bar.md\n\u2502       \u2514\u2500\u2500 hello.md\n\u251c\u2500\u2500 versioned_sidebars\n\u2502   \u2514\u2500\u2500 version-1.0.0-sidebars.json\n")),Object(i.b)("p",null,"In v2, you have to populate the missing versioned_docs & versioned_sidebars (with the right frontmatter and id reference too)."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell",metastring:"{3-5,12}","{3-5,12}":!0}),"website\n\u251c\u2500\u2500 versioned_docs\n\u2502   \u251c\u2500\u2500 version-1.1.0\n\u2502   \u2502   \u251c\u2500\u2500 foo\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 bar.md\n\u2502   \u2502   \u2514\u2500\u2500 hello.md\n\u2502   \u2514\u2500\u2500 version-1.0.0\n\u2502       \u251c\u2500\u2500 foo\n\u2502       \u2502   \u2514\u2500\u2500 bar.md\n\u2502       \u2514\u2500\u2500 hello.md\n\u251c\u2500\u2500 versioned_sidebars\n\u2502   \u251c\u2500\u2500 version-1.1.0-sidebars.json\n\u2502   \u2514\u2500\u2500 version-1.0.0-sidebars.json\n")),Object(i.b)("h3",{id:"convert-style-attributes-to-style-objects-in-mdx"},"Convert style attributes to style objects in MDX"),Object(i.b)("p",null,"Docusaurus 2 uses JSX for doc files. If you have any style attributes in your Docusaurus 1 docs, convert them to style objects, like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-diff"}),"---\nid: demo\ntitle: Demo\n---\n\n## Section\n\nhello world\n\n- pre style=\"background: black\">zzz</pre>\n+ pre style={{background: 'black'}}>zzz</pre>\n")))}p.isMDXComponent=!0},239:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return j}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),b=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s({},n,{},e)),t},d=function(e){var n=b(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=b(t),u=a,m=d["".concat(r,".").concat(u)]||d[u]||p[u]||i;return t?o.a.createElement(m,s({ref:n},c,{components:t})):o.a.createElement(m,s({ref:n},c))}));function j(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=t[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},240:function(e,n,t){var a;!function(){"use strict";var t={}.hasOwnProperty;function o(){for(var e=[],n=0;n<arguments.length;n++){var a=arguments[n];if(a){var i=typeof a;if("string"===i||"number"===i)e.push(a);else if(Array.isArray(a)&&a.length){var r=o.apply(null,a);r&&e.push(r)}else if("object"===i)for(var s in a)t.call(a,s)&&a[s]&&e.push(s)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(a=function(){return o}.apply(n,[]))||(e.exports=a)}()},242:function(e,n,t){"use strict";var a=t(0),o=t.n(a),i=t(240),r=t.n(i),s=t(88),l=t.n(s);const c={left:37,right:39};n.a=function(e){const{block:n,children:t,defaultValue:i,values:s}=e,[b,d]=Object(a.useState)(i),u=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:r()("tabs",{"tabs--block":n})},s.map(({value:e,label:n})=>o.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":b===e,className:r()("tab-item",l.a.tabItem,{"tab-item--active":b===e}),key:e,ref:e=>u.push(e),onKeyDown:e=>((e,n,t)=>{switch(t.keyCode){case c.right:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case c.left:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(u,e.target,e),onFocus:()=>d(e),onClick:()=>d(e)},n))),o.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter(e=>e.props.value===b)[0]))}},243:function(e,n,t){"use strict";var a=t(0),o=t.n(a);n.a=function(e){return o.a.createElement("div",null,e.children)}}}]);